<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/util
       https://www.springframework.org/schema/util/spring-util.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">
    <bean id="person" class="com.zhy.bean.Person">
        <property name="name">
            <!--传递空值-->
            <null></null>
        </property>
        <!--通过ref引用其他值-->
        <property name="address" ref="address"></property>
        <!--引用内部bean-->
        <!-- <property name="address">
             <bean class="com.mashibing.bean.Address">
                 <property name="province" value="北京"></property>
                 <property name="city" value="北京"></property>
                 <property name="town" value="西城区"></property>
             </bean>
         </property>-->
        <!--为list赋值-->
        <property name="books">
            <list>
                <!--内部bean-->
                <bean id="book1" class="com.zhy.bean.Book">
                    <property name="name" value="多线程与高并发"></property>
                    <property name="author" value="马士兵"></property>
                    <property name="price" value="1000"></property>
                </bean>
                <!--外部bean-->
                <ref bean="book2"></ref>
            </list>
        </property>

        <!--给map赋值-->
        <property name="maps" ref="myMap"></property>

        <!--给property赋值-->
        <property name="properties">
            <props>
                <prop key="aaa">aaa</prop>
                <prop key="bbb">222</prop>
            </props>
        </property>


        <!--给数组赋值-->
        <property name="hobbies">
            <array>
                <value>book</value>
                <value>movie</value>
                <value>game</value>
            </array>
        </property>

        <!--给set赋值-->
        <property name="sets">
            <set>
                <value>111</value>
                <value>222</value>
                <value>222</value>
            </set>
        </property>

    </bean>

    <bean id="address" class="com.zhy.bean.Address">
        <property name="province" value="河北"></property>
        <property name="city" value="zjk"></property>
        <property name="town" value="ha"></property>
    </bean>

    <bean id="book2" class="com.zhy.bean.Book">
        <property name="name" value="JVM"></property>
        <property name="author" value="马士兵"></property>
        <property name="price" value="1200"></property>
    </bean>
    <!--util名称空间创建集合类型的bean-->
    <util:map id="myMap">
        <entry key="key1" value="value1"></entry>
        <entry key="key2" value-ref="book2"></entry>
        <entry key="key03">
            <bean class="com.zhy.bean.Book">
                <property name="name" value="西游记" ></property>
                <property name="author" value="吴承恩" ></property>
                <property name="price" value="100" ></property>
            </bean>
        </entry>
    </util:map>


    <bean id="person2" class="com.zhy.bean.Person">
        <property name="id" value="1"></property>
        <property name="name" value="zhangsan"></property>
        <property name="age" value="21"></property>
        <property name="gender" value="男"></property>
    </bean>

    <!--parent:指定bean的配置信息继承于哪个bean-->
    <bean id="person3" class="com.zhy.bean.Person" parent="person2">
        <property name="name" value="lisi"></property>
    </bean>

    <bean id="person4" class="com.zhy.bean.Person" abstract="true">
        <property name="id" value="1"></property>
        <property name="name" value="zhangsan"></property>
        <property name="age" value="21"></property>
        <property name="gender" value="男"></property>
    </bean>
    <!--parent:指定bean的配置信息继承于哪个bean-->
    <bean id="person5" class="com.zhy.bean.Person" parent="person4">
        <property name="name" value="lisi"></property>
    </bean>
    <!--bean对象在创建的时候是按照bean在配置文件的顺序决定的，也可以使用depend-on标签来决定顺序-->
    <bean id="book3" class="com.zhy.bean.Book" depends-on="person6,address2"></bean>
    <bean id="address2" class="com.zhy.bean.Address"></bean>
    <bean id="person6" class="com.zhy.bean.Person"></bean>

    <!--
      bean的作用域：singleton、prototype、request、session Spring5去掉了后两个
      默认情况下是单例的
      prototype：多实例的
          容器启动的时候不会创建多实例bean，只有在获取对象的时候才会创建该对象
          每次创建都是一个新的对象
      singleton：默认的单例对象
          在容器启动完成之前就已经创建好对象
          获取的所有对象都是同一个
  -->
    <bean id="person7" class="com.zhy.bean.Person" scope="prototype"></bean>

    <!--
        静态工厂的使用：
        class:指定静态工厂类
        factory-method:指定哪个方法是工厂方法
    -->
    <bean id="person8" class="com.zhy.factory.PersonStaticFactory" factory-method="getPerson">
        <!--constructor-arg：可以为方法指定参数-->
        <constructor-arg value="lisi"></constructor-arg>
    </bean>


    <!--实例工厂使用-->
    <!--创建实例工厂类-->
    <bean id="personInstanceFactory" class="com.zhy.factory.PersonInstanceFactory"></bean>
    <!--
    factory-bean:指定使用哪个工厂实例
    factory-method:指定使用哪个工厂实例的方法
    -->
    <bean id="person9" class="com.zhy.bean.Person" factory-bean="personInstanceFactory" factory-method="getPerson">
        <constructor-arg value="wangwu"></constructor-arg>
    </bean>

    <bean id="myfactorybean" class="com.zhy.factory.MyFactoryBean"></bean>

    <!--bean生命周期表示bean的创建到销毁
        如果bean是单例，容器在启动的时候会创建好，关闭的时候会销毁创建的bean
        如果bean是多例，获取的时候创建对象，销毁的时候不会有任何的调用
    -->
    <bean id="address4" class="com.zhy.bean.Address" init-method="init" destroy-method="destory"></bean>

    <!--<bean id="myBeanPostProcessor" class="com.zhy.bean.MyBeanPostProcessor"></bean>-->

    <!--加载外部配置文件-->
    <context:property-placeholder location="classpath:dbconfig.properties"></context:property-placeholder>
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="username" value="${username}"></property>
        <property name="password" value="${password}"></property>
        <property name="url" value="${url}"></property>
        <property name="driverClassName" value="${driverClassName}"></property>
    </bean>
</beans>
